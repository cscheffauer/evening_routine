{"version":3,"sources":["components/Pages/GoalsPage/GoalCard.js","components/Pages/GoalsPage/AddGoal.js","components/Pages/GoalsPage/EditGoal.js","components/Pages/GoalsPage/GoalsPage.js","components/Layout/Scroll/Scroll.js","components/Pages/TodayPage/TasksTable.js","components/Pages/TodayPage/StepContent.js","components/Pages/TodayPage/RoutineDialog.js","components/Pages/TodayPage/TodayPage.js"],"names":["getGoalCategoryImage","category","GOAL_CATEGORIES","GOAL_CAT_CAREER","GOAL_CAT_EDUCATIONAL","GOAL_CAT_EXTERNAL","GOAL_CAT_EXPERIMENTAL","GOAL_CAT_FINANCIAL","GOAL_CAT_HEALTH","GOAL_CAT_PERSONAL","GOAL_CAT_PSYCHOLOGICAL","GOAL_CAT_RELATIONSHIP","GOAL_CAT_SPIRITUAL","GoalCard","props","goal","index","openEditGoalDialog","handleRemove","darkMode","classes","makeStyles","theme","root","height","width","breakpoints","down","up","media","palette","secondary","main","primary","cardActionArea","boxDeleteButton","position","top","deleteButton","float","padding","minWidth","cardContent","useStyles","Card","className","CardActionArea","CardMedia","onClick","image","title","CardContent","Typography","gutterBottom","variant","component","color","description","Box","Button","size","categories","Object","values","AddGoal","state","newGoal","handleChangeCategory","bind","handleChangeTitle","handleChangeDescription","event","newState","assign","this","target","value","setState","initialGoal","handleAdd","handleClose","open","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","select","label","fullWidth","onChange","margin","helperText","map","MenuItem","key","required","autoFocus","type","placeholder","multiline","DialogActions","disabled","e","Component","EditGoalDialog","goalToBeEdited","handleEdit","withStyles","flexGrow","container","display","flexDirection","justifyContent","maxWidth","boxGoals","marginTop","boxNoGoals","imgNoGoals","typoNoGoals","textAlign","buttonAdd","marginBottom","minHeight","centerTypo","withWidth","goals","onAddGoal","onEditGoal","onRemoveGoal","options","initialNewGoal","React","useState","openAdd","setOpenAdd","openEdit","setOpenEdit","setNewGoal","setGoalToBeEdited","indexOfGoal","setIndexOfGoal","Container","hideTitle","undefined","isWidthUp","length","Grid","item","xs","justify","spacing","paragraph","noGoalsMessage","alt","src","Fab","aria-label","goalToBeAdded","preventDefault","EditGoal","Scroll","children","isoDateRegex","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","tasks","onChangeTask","columns","field","editComponent","InputProps","style","fontSize","emptyValue","utils","DateFnsUtils","locale","dateTimePickerLocalization","TimePicker","format","clearable","render","plannedtime","Date","toLocaleTimeString","hour","minute","exec","getRenderValue","data","tasksTableState","setTasksTableState","useEffect","localization","body","emptyDataSourceMessage","icons","components","Action","action","tooltip","Tooltip","IconButton","console","log","handleSave","icon","Icon","iconProps","filtering","search","selection","sorting","paging","headerStyle","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","routineSteps","getMaxRows","StepContent","goalsPageOptions","window","innerHeight","updateWindowDimensions","addEventListener","removeEventListener","activeStep","recapText","onChangeRecapText","randomGiphyCatURL","randomGiphySleepURL","shuffleGiphy","Paper","square","elevation","headerStepper","part","typoStepper","boxStepperContent","boxGiphy","boxGiphyImage","backgroundImage","giphy","buttonShuffleGiphy","boxRecapDay","rows","rowsMax","textFieldRecapDay","boxReviewGoals","GoalsPage","boxTasks","connect","changeDarkMode","changeGoals","dispatch","addGoal","editGoal","removeGoal","alignItems","paddingTop","backgroundSize","backgroundPosition","backgroundRepeat","innerTextField","RoutineDialog","tasksToBeSaved","openBackdrop","handleCloseBackDrop","fetchRandomGiphy","showRoutineSavedMsg","onSaveRoutine","Backdrop","backdropRoutine","containerRoutine","paperRoutine","containerStepper","changedTasks","MobileStepper","steps","progress","nextButton","maxSteps","direction","backButton","boxButtonSaveClose","buttonSaveCloseRoutine","recap","createdAt","toString","timer","clearTimeout","routine","saveRoutine","withTheme","button","marginRight","actionsContainer","resetContainer","boxButton","zIndex","drawer","paddingLeft","paddingRight","flexFlow","paddingBottom","borderRadius","marginLeft","isObjectEmpty","obj","hasOwnProperty","Alert","TodayPage","tag","fetch","then","response","json","image_original_url","routineSavedMsgOpen","routineToShow","onSetTaskDone","getYourTasksLabel","LabelType","midnight","toDateString","tonight","setDate","getDate","parse","List","sort","a","b","done","compareTasks","task","ListItem","tableData","ListItemAvatar","typoTaskTimeSec","typoTaskTimePrim","ListItemText","ListItemIcon","checkBoxTask","Checkbox","edge","checked","taskId","taskDone","tabIndex","disableRipple","boxRecap","recapTextField","readOnly","startIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","changeRoutines","routineIndex","taskIndex","setTaskDone","borderRight"],"mappings":"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","file":"static/js/9.b7d48c9d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Box from '@material-ui/core/Box';\n\nimport { GOAL_CATEGORIES } from '../../../constants';\n\nconst getGoalCategoryImage = (category) => {\n    switch (category) {\n        case GOAL_CATEGORIES.GOAL_CAT_CAREER:\n            return \"images/goals/categories/career.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_EDUCATIONAL:\n            return \"images/goals/categories/educational.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_EXTERNAL:\n            return \"images/goals/categories/external.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_EXPERIMENTAL:\n            return \"images/goals/categories/experimental.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_FINANCIAL:\n            return \"images/goals/categories/financial.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_HEALTH:\n            return \"images/goals/categories/health.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_PERSONAL:\n            return \"images/goals/categories/personal_development.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_PSYCHOLOGICAL:\n            return \"images/goals/categories/psychological.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_RELATIONSHIP:\n            return \"images/goals/categories/relationship.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_SPIRITUAL:\n            return \"images/goals/categories/spiritual.png\"\n        default:\n            break;\n    }\n}\n\n\nconst useStyles = (darkMode) => makeStyles(theme => ({\n    root: {\n        height: '100%',\n        width: 250,\n        [theme.breakpoints.down('sm')]: {\n            width: '65vw',\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 350,\n        },\n    },\n    media: {\n        height: 200,\n        [theme.breakpoints.down('sm')]: {\n            height: 150,\n        },\n        backgroundColor: darkMode ? theme.palette.secondary.main : theme.palette.primary.main,\n        marginTop: 40,\n    },\n    cardActionArea: {\n        height: '100%'\n    },\n    boxDeleteButton: {\n        height: 40,\n        width: '100%',\n        position: 'absolute',\n        top: 0,\n    },\n    deleteButton: {\n        float: 'right',\n        padding: '8px 5px',\n        minWidth: 45,\n    },\n    cardContent: {\n        height: 'inherit'\n    }\n\n}));\n\nconst GoalCard = (props) => {\n    const { goal, index, openEditGoalDialog, handleRemove, darkMode } = props;\n    const classes = useStyles(darkMode)();\n    return (\n        <Card className={classes.root}>\n            <CardActionArea className={classes.cardActionArea} >\n                <CardMedia\n                    onClick={() => openEditGoalDialog(goal, index)}\n                    className={classes.media}\n                    image={getGoalCategoryImage(goal.category)}\n                    title={goal.category}\n                />\n                <CardContent className={classes.cardContent} onClick={() => openEditGoalDialog(goal, index)}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {goal.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {goal.description}\n                    </Typography>\n                </CardContent>\n                <Box className={classes.boxDeleteButton}>\n                    <Button className={classes.deleteButton} size=\"small\" color={darkMode ? \"secondary\" : \"primary\"} onClick={() => handleRemove(index)}>\n                        <HighlightOffIcon />\n                    </Button>\n                </Box>\n            </CardActionArea>\n\n        </Card>\n    );\n}\n\nexport default GoalCard;","import React, { Component, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport {\n    GOAL_CATEGORIES\n} from '../../../constants'       //get constants form constants file\n\n\nconst categories = Object.values(GOAL_CATEGORIES);\n\n\nclass AddGoal extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            newGoal: {},\n        }\n        this.handleChangeCategory = this.handleChangeCategory.bind(this);\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    }\n\n    handleChangeCategory(event) {\n        let newState = Object.assign({}, this.state);\n        newState.newGoal.category = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeTitle(event) {\n        let newState = Object.assign({}, this.state);\n        newState.newGoal.title = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeDescription(event) {\n        let newState = Object.assign({}, this.state);\n        newState.newGoal.description = event.target.value;\n        this.setState(newState);\n    }\n\n    componentDidUpdate() {\n        this.state.newGoal !== this.props.initialGoal && this.setState({ newGoal: this.props.initialGoal })\n    }\n\n    render() {\n        const { handleAdd, handleClose, open } = this.props;\n\n        return (\n            <Fragment>\n\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Add a new goal</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            select\n                            id=\"category\"\n                            label=\"Category\"\n                            fullWidth\n                            onChange={this.handleChangeCategory}\n                            margin=\"normal\"\n                            value={this.state.newGoal.category}\n                            helperText=\"Please select the goal category\"\n                        >\n                            {categories.map(category => (\n                                <MenuItem key={category} value={category}>\n                                    {category}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <TextField\n                            required\n                            autoFocus\n                            margin=\"normal\"\n                            id=\"title\"\n                            label=\"Title\"\n                            type=\"text\"\n                            fullWidth\n                            onChange={this.handleChangeTitle}\n                        />\n                        <TextField\n                            required\n                            autoFocus\n                            margin=\"normal\"\n                            id=\"description\"\n                            label=\"Description\"\n                            placeholder=\"Type in a proper description of your goal.\"\n                            multiline\n                            type=\"text\"\n                            fullWidth\n                            onChange={this.handleChangeDescription}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button disabled={!(this.state.newGoal.title !== '' && this.state.newGoal.description !== '')} onClick={(e) => handleAdd(e, this.state.newGoal)} color=\"primary\">\n                            Add\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nexport default AddGoal;","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n    GOAL_CATEGORIES\n} from '../../../constants'       //get constants form constants file\n\nconst categories = Object.values(GOAL_CATEGORIES);\n\nconst styles = theme => ({});\n\n\nclass EditGoalDialog extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            goalToBeEdited: {},\n        }\n        this.handleChangeCategory = this.handleChangeCategory.bind(this);\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    }\n\n    handleChangeCategory(event) {\n        let newState = Object.assign({}, this.state);\n        newState.goalToBeEdited.category = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeTitle(event) {\n        let newState = Object.assign({}, this.state);\n        newState.goalToBeEdited.title = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeDescription(event) {\n        let newState = Object.assign({}, this.state);\n        newState.goalToBeEdited.description = event.target.value;\n        this.setState(newState);\n    }\n\n    componentDidUpdate() {\n        if (this.props.initialGoal !== this.state.goalToBeEdited) {\n            this.setState({ goalToBeEdited: this.props.initialGoal });\n        }\n    }\n    render() {\n        const { index, handleEdit, handleClose, open } = this.props;\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n\n                <DialogTitle id=\"form-dialog-title\">Edit existing goal</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        select\n                        id=\"category\"\n                        label=\"Category\"\n                        fullWidth\n                        onChange={this.handleChangeCategory}\n                        margin=\"normal\"\n                        value={this.state.goalToBeEdited.category}\n                        helperText=\"Please select the goal category\"\n                    >\n                        {categories.map(category => (\n                            <MenuItem key={category} value={category}>\n                                {category}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <TextField\n                        required\n                        autoFocus\n                        margin=\"normal\"\n                        id=\"title\"\n                        label=\"Title\"\n                        type=\"text\"\n                        fullWidth\n                        value={this.state.goalToBeEdited.title}\n                        onChange={this.handleChangeTitle}\n                    />\n                    <TextField\n                        required\n                        autoFocus\n                        margin=\"normal\"\n                        id=\"description\"\n                        label=\"Description\"\n                        placeholder=\"Type in a proper description of your goal.\"\n                        multiline\n                        type=\"text\"\n                        fullWidth\n                        value={this.state.goalToBeEdited.description}\n                        onChange={this.handleChangeDescription}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                        </Button>\n                    <Button disabled={!(this.state.goalToBeEdited.title !== '' && this.state.goalToBeEdited.description !== '')} onClick={(e) => handleEdit(e, this.state.goalToBeEdited, index)} color=\"primary\">\n                        Save\n                        </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(styles)(EditGoalDialog);","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport GoalCard from './GoalCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport AddGoal from './AddGoal';\nimport EditGoal from './EditGoal';\n\nimport {\n    GOAL_CATEGORIES\n} from '../../../constants'       //get constants form constants file\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        [theme.breakpoints.up('md')]: {\n            maxWidth: 1280,\n            height: 'calc(100vh - (112px))',\n        },\n    },\n    boxGoals: {\n        height: '100%',\n        marginTop: 20,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    boxNoGoals: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    imgNoGoals: {\n        width: '55vh',\n        [theme.breakpoints.down('sm')]: {\n            width: '35vh',\n        },\n        margin: '0 auto',\n    },\n    typoNoGoals: {\n        textAlign: 'center',\n        marginTop: 60,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 30,\n        }\n    },\n    buttonAdd: {\n        display: 'flex',\n        margin: 'auto',\n        marginTop: 30,\n        marginBottom: 30,\n        minHeight: 56,\n    },\n    centerTypo: {\n        textAlign: 'center',\n    }\n}));\n\n\nconst GoalsPage = (props) => {\n    const { goals, onAddGoal, onEditGoal, onRemoveGoal, options, darkMode } = props;\n    const classes = useStyles();\n\n    const initialNewGoal = {\n        title: '',\n        description: '',\n        category: GOAL_CATEGORIES.GOAL_CAT_EDUCATIONAL,\n    }\n\n    const [openAdd, setOpenAdd] = React.useState(false);\n    const [openEdit, setOpenEdit] = React.useState(false);\n    const [newGoal, setNewGoal] = React.useState({});\n    const [goalToBeEdited, setGoalToBeEdited] = React.useState({});\n    const [indexOfGoal, setIndexOfGoal] = React.useState(0);\n\n    const openAddGoalDialog = () => {\n        setNewGoal(Object.assign({}, initialNewGoal));\n        setOpenAdd(true);\n    };\n\n    const openEditGoalDialog = (goal, index) => {\n        setGoalToBeEdited(Object.assign({}, goal));\n        setIndexOfGoal(index);\n        setOpenEdit(true);\n    }\n\n    const handleAdd = (event, goalToBeAdded) => {\n        event.preventDefault();\n        onAddGoal(Object.assign({}, goalToBeAdded));\n        handleClose();\n    }\n\n    const handleEdit = (event, goalToBeEdited, index) => {\n        event.preventDefault();\n        onEditGoal(Object.assign({}, goalToBeEdited), index);\n        handleClose();\n    };\n\n    const handleRemove = (index) => {\n        onRemoveGoal(index);\n    }\n\n    const handleClose = () => {\n        setOpenAdd(false);\n        setOpenEdit(false);\n    };\n    return (\n        <Container className={!options.hideTitle ? classes.container : undefined}>\n            {!options.hideTitle &&\n                <Box>\n                    <Typography className={classes.centerTypo} variant={isWidthUp('sm', props.width) ? \"h4\" : \"h6\"}>\n                        Your personal goals\n                        </Typography>\n                </Box>\n            }\n            <Box className={classes.boxGoals} >\n                {goals.length > 0 ?\n                    <Grid className={classes.root} item xs={12}>\n                        <Grid container justify=\"center\" spacing={3}>\n                            {goals.map((goal, index) => (\n                                <Grid key={index} item>\n                                    <GoalCard goal={goal} index={index} openEditGoalDialog={openEditGoalDialog} handleRemove={handleRemove} darkMode={darkMode} />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Grid>\n                    :\n                    !options.hideTitle ?\n                        <Box className={classes.boxNoGoals}>\n                            <img alt=\"noGoalsImage\" className={classes.imgNoGoals} src={`images/goals/` + (darkMode ? `noGoals_dark` : `noGoals`) + `.png`} />\n                            <Typography className={classes.typoNoGoals} paragraph>\n                                {options.noGoalsMessage}\n                            </Typography>\n                        </Box>\n                        :\n                        <Typography className={classes.typoNoGoals} paragraph>\n                            {options.noGoalsMessage}\n                        </Typography>\n\n\n                }\n            </Box>\n            <Fab className={classes.buttonAdd} onClick={openAddGoalDialog} color={darkMode ? \"secondary\" : \"primary\"} aria-label=\"add\">\n                <AddIcon />\n            </Fab>\n            <AddGoal initialGoal={newGoal} handleAdd={handleAdd} handleClose={handleClose} open={openAdd} darkMode={darkMode} />\n            <EditGoal initialGoal={goalToBeEdited} index={indexOfGoal} handleEdit={handleEdit} handleClose={handleClose} open={openEdit} />\n        </Container>\n    );\n};\n\n\n\nexport default withWidth()(GoalsPage);\n","import React from 'react';\n\nimport './Scroll.scss';\n/*\nScroll is a wrapping component\n*/\nconst Scroll = (props) => {\n    return (\n        <div className=\"scrollContainer\">\n            {props.children}        {/* scroll will use it's children to render here*/}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { forwardRef, useEffect, useState } from 'react'\nimport MaterialTable, { MTableAction } from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nconst isoDateRegex = /^\\d{4}-(0[1-9]|1[0-2])-([12]\\d|0[1-9]|3[01])([T\\s](([01]\\d|2[0-3]):[0-5]\\d|24:00)(:[0-5]\\d([.,]\\d+)?)?([zZ]|([+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?$/;\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n\nconst TasksTable = (props) => {\n    const { tasks, onChangeTask } = props;\n\n    const getRenderValue = (props) => {\n        if (props.plannedtime instanceof Date) {\n            return props.plannedtime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        } else if (isoDateRegex.exec(props.plannedtime)) {\n            return new Date(props.plannedtime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        } else {\n            return props.plannedtime;\n        }\n    }\n\n    const [tasksTableState, setTasksTableState] = useState({\n        columns: [\n\n            { title: 'Title', field: 'title' },\n            {\n                title: 'Description', field: 'description',\n                editComponent: props => (\n                    <TextField\n                        value={props.value || ''}\n                        placeholder='Description'\n                        fullWidth={true}\n                        multiline={true}\n                        onChange={e => {\n                            props.onChange(e.target.value)\n                        }}\n                        InputProps={{\n                            style: {\n                                fontSize: 13,\n                            }\n                        }}\n                    />\n                )\n            },\n            {\n                title: 'Planned at',\n                field: 'plannedtime',\n                type: 'time',\n                emptyValue: '12:00',\n                editComponent: props => (\n                    <MuiPickersUtilsProvider\n                        utils={DateFnsUtils}\n                        locale={props.dateTimePickerLocalization}>\n                        <TimePicker\n                            format=\"HH:mm\"\n                            value={props.value || null}\n                            onChange={props.onChange}\n                            clearable\n                            InputProps={{\n                                style: {\n                                    fontSize: 13,\n                                }\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                )\n                ,\n                render: props => getRenderValue(props)\n            },\n\n        ],\n        data: tasks,\n    });\n\n\n    useEffect(() => {\n        onChangeTask(tasksTableState.data);\n        return;\n    }, [tasksTableState]);\n\n\n    const handleSave = (event, props) => {\n        console.log(props);\n        props.action.onClick(event, props.data);\n\n    }\n\n    return (\n        <MaterialTable\n            style={{\n                width: isWidthUp('sm', props.width) ? \"100%\" : \"85vw\",\n            }}\n            localization={{\n                body: {\n                    emptyDataSourceMessage: 'No tasks defined.',\n                }\n            }}\n            icons={tableIcons}\n            title=\"Your tasks for tomorrow\"\n            columns={tasksTableState.columns}\n            data={tasksTableState.data}\n            components={{\n                Action:\n                    (props) => {\n                        if (props.action.tooltip === \"Save\") {\n                            return (\n                                <Tooltip title={props.action.tooltip}>\n                                    <IconButton\n                                        onClick={(event) => handleSave(event, props)}>\n                                        {typeof props.action.icon === \"string\" ? (\n                                            <Icon {...props.action.iconProps}>{props.action.icon}</Icon>\n                                        ) : typeof props.action.icon === \"function\" ? (\n                                            props.action.icon({ ...props.action.iconProps, disabled: false })\n                                        ) : (<props.action.icon />)}\n                                    </IconButton>\n                                </Tooltip>\n                            )\n                        }\n                        else {\n                            return <MTableAction {...props} />\n                        }\n\n\n                    }\n\n            }}\n            options={{\n                filtering: false,\n                search: false,\n                selection: false,\n                sorting: false,\n                paging: false,\n                headerStyle: {\n                    fontSize: isWidthUp('sm', props.width) ? 'unset' : \"2vh\"\n                }\n            }}\n            editable={{\n                onRowAdd: newData =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            setTasksTableState(prevState => {\n                                const data = [...prevState.data];\n                                data.push(newData);\n                                return { ...prevState, data };\n                            });\n                        }, 600);\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            if (oldData) {\n                                setTasksTableState(prevState => {\n                                    const data = [...prevState.data];\n                                    data[data.indexOf(oldData)] = newData;\n                                    return { ...prevState, data };\n                                });\n                            }\n                        }, 600);\n                    }),\n                onRowDelete: oldData =>\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            setTasksTableState(prevState => {\n                                const data = [...prevState.data];\n                                data.splice(data.indexOf(oldData), 1);\n                                return { ...prevState, data };\n                            });\n                        }, 600);\n                    }),\n            }}\n        />\n    );\n}\n\nexport default withWidth()(TasksTable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Scroll from '../../Layout/Scroll/Scroll'\nimport TasksTable from './TasksTable';\nimport GoalsPage from '../GoalsPage/GoalsPage';\n\nimport { addGoal, editGoal, removeGoal } from '../../../actions/actions'\n\n\nconst mapStateToProps = state => {\n    return {\n        darkMode: state.changeDarkMode.darkMode,\n        goals: state.changeGoals.goals                    // -''-\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddGoal: (goal) => dispatch(addGoal(goal)),\n        onEditGoal: (goal, index) => dispatch(editGoal(goal, index)),\n        onRemoveGoal: (index) => dispatch(removeGoal(index)),\n    }\n}\n\n\nconst styles = theme => ({\n    headerStepper: {\n\n    },\n    typoStepper: {\n        marginTop: 24,\n        marginBottom: 24,\n        fontSize: 20,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 6,\n            marginBottom: 6,\n            fontSize: '2vh',\n        },\n    },\n    boxStepperContent: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        [theme.breakpoints.down('sm')]: {\n            paddingTop: '1vh',\n        }\n    },\n    boxGiphy: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexDirection: 'column',\n    },\n    buttonShuffleGiphy: {\n        marginBottom: 28,\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: 12,\n        },\n    },\n    boxGiphyImage: {\n        display: 'flex',\n        flexGrow: 1,\n        justifyContent: 'center',\n        flexDirection: 'column',\n        width: '60vw',\n        maxWidth: 900,\n        [theme.breakpoints.down('sm')]: {\n            width: '80vw',\n        },\n    },\n    giphy: {\n        height: '90%',\n        width: '100%',\n        backgroundSize: 'contain',\n        backgroundPosition: 'center center',\n        backgroundRepeat: 'no-repeat'\n    },\n    boxRecapDay: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        width: '90%',\n    },\n    boxReviewGoals: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        width: '90%',\n    },\n    boxTasks: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        width: '90%',\n        [theme.breakpoints.down('sm')]: {\n            width: 'unset',\n        },\n    },\n\n    textFieldRecapDay: {\n        height: '100%',\n    },\n    innerTextField: {\n        '& label.Mui-focused': {\n            color: 'green',\n        },\n    },\n});\n\nconst routineSteps = [\n    {\n        label: 'Eliminate negativity',\n        description: [\"The best way to get rid of bad thoughts and eliminiate negativity is to take some minutes to watch something funny and entertaining.\", \"Shuffle through some cat giphy's and move on to the next step if you feel comfortable: \"],\n    },\n    {\n        label: 'Empty your brain & close your day',\n        description: ['\"At the end of each day, you should play back the tapes of your performance. The results should either applaud you or prod you\". [Jim Rohn] ', 'Remember what you did today and notice everything you\\'ve accomplished, learned and anything worth remembering:'],\n    },\n    {\n        label: 'Review your progress',\n        description: [\"After you have emptied your brain and you have written down what you have achieved today, review your progress and see whether you're doing all the things that you should be doing to fulfill your goals. \", \"Review and edit your goals if needed:\"],\n    },\n    {\n        label: 'Get ready for tomorrow today',\n        description: ['This is one of the most important things you can do before tomorrow morning. ', 'Write down the 3 most important tasks for tomorrow and give them a specific timeframe:'],\n    },\n    {\n        label: 'Give your body some digital time off',\n        description: ['After you have finished your evening routine shutdown all your devices or set them into flight mode, before going to sleep.', 'We suggest to stay offline a minimum of 30min before going to bed to signalize your body that it\\'s time to sleep.', 'Hit the Save button below to save your routine and good night 😴'],\n    },\n];\n\nconst getMaxRows = (height) => {\n    if (height > 1700) return 50\n    if (height > 1600) return 46\n    if (height > 1500) return 42\n    if (height > 1400) return 38\n    if (height > 1300) return 34\n    if (height > 1200) return 30\n    if (height > 1100) return 26\n    if (height > 1000) return 22\n    if (height > 900) return 18\n    if (height > 820) return 16\n    if (height > 769) return 14\n    if (height > 668) return 12\n    if (height > 580) return 10\n    return 7\n}\n\n\nclass StepContent extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            goalsPageOptions: {\n                hideTitle: true,\n                noGoalsMessage: \"No goals defined. Define at least one goal to move on.\",\n            },\n            height: window.innerHeight\n        }\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n    }\n\n    updateWindowDimensions() {\n        this.setState({ height: window.innerHeight });\n    }\n\n\n\n\n    render() {\n        const { activeStep, recapText, onChangeRecapText, tasks, onChangeTask, randomGiphyCatURL, randomGiphySleepURL, shuffleGiphy, goals, onAddGoal, onEditGoal, onRemoveGoal, classes, darkMode } = this.props;\n\n        const handleChangeRecapText = event => {\n            onChangeRecapText(event.target.value);\n        };\n\n        return (\n            <>\n                <Paper square elevation={0} className={classes.headerStepper}>\n                    <Typography variant={isWidthUp('sm', this.props.width) ? \"h4\" : \"h6\"}>{routineSteps[activeStep].label}</Typography>\n                </Paper>\n                {\n                    routineSteps[activeStep].description\n                        .map((part, index) =>\n                            <Typography key={index} className={classes.typoStepper}>{part}</Typography>\n                        )\n                }\n                <Box className={classes.boxStepperContent}>\n                    {\n                        activeStep === 0 &&\n                        <>\n                            <Box className={classes.boxGiphy}>\n                                <Box className={classes.boxGiphyImage}>\n                                    <div style={{ backgroundImage: 'url(' + randomGiphyCatURL + ')' }} className={classes.giphy} />\n                                    {/*<img alt=\"Giphy\" className={classes.giphy} src={randomGiphyURL} />*/}\n                                </Box>\n                                <Button\n                                    variant=\"contained\"\n                                    color={darkMode ? \"secondary\" : \"primary\"}\n                                    size=\"small\"\n                                    className={classes.buttonShuffleGiphy}\n                                    onClick={() => shuffleGiphy('cat')}\n                                ><ShuffleIcon /></Button>\n                            </Box>\n\n                        </>\n                    }{\n                        activeStep === 1 &&\n                        <>\n                            <Box className={classes.boxRecapDay}>\n                                <TextField\n                                    id=\"outlined-multiline-static\"\n                                    label=\"Notes of today\"\n                                    multiline\n                                    rows={getMaxRows(this.state.height) * 3 / 4}\n                                    rowsMax={getMaxRows(this.state.height)}\n                                    className={classes.textFieldRecapDay}\n                                    value={recapText}\n                                    onChange={handleChangeRecapText}\n                                    variant=\"outlined\"\n                                    fullWidth={true}\n                                />\n                            </Box>\n                        </>\n                    }{\n                        activeStep === 2 &&\n                        <>\n                            <Box className={classes.boxReviewGoals}>\n                                <Scroll>\n                                    <GoalsPage goals={goals} onAddGoal={onAddGoal} onEditGoal={onEditGoal} onRemoveGoal={onRemoveGoal} options={this.state.goalsPageOptions} darkMode={darkMode} />\n                                </Scroll>\n                            </Box>\n                        </>\n                    }{\n                        activeStep === 3 &&\n                        <>\n                            <Box className={classes.boxTasks}>\n                                <Scroll>\n                                    <TasksTable tasks={tasks} onChangeTask={onChangeTask} />\n                                </Scroll>\n\n                            </Box>\n                        </>\n                    }\n                    {\n                        activeStep === 4 &&\n                        <>\n                            <Box className={classes.boxGiphy}>\n                                <Box className={classes.boxGiphyImage}>\n                                    <div style={{ backgroundImage: 'url(' + randomGiphySleepURL + ')' }} className={classes.giphy} />\n                                </Box>\n                            </Box>\n                        </>\n                    }\n                </Box>\n            </>\n        );\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withWidth()(StepContent)));\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Paper from '@material-ui/core/Paper';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport StepContent from './StepContent';\n\nimport { saveRoutine } from '../../../actions/actions'\n\nconst mapStateToProps = state => {\n    return {\n        darkMode: state.changeDarkMode.darkMode,\n        goals: state.changeGoals.goals                    // -''-\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSaveRoutine: (routine) => dispatch(saveRoutine(routine)),\n    }\n}\n\nconst styles = (theme => ({\n    //toolbar: theme.mixins.toolbar,\n    container: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexDirection: 'column',\n        [theme.breakpoints.down('md')]: {\n            height: '80vh',\n        },\n        [theme.breakpoints.up('md')]: {\n            height: '85vh',\n        }\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n\n    boxButton: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    backdropRoutine: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    containerRoutine: {\n        maxWidth: 1200,\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: 0,\n            paddingRight: 0,\n        },\n    },\n    paperRoutine: {\n        height: '90vh',\n        display: 'flex',\n        flexFlow: 'column wrap',\n        justifyContent: 'space-between'\n    },\n    containerStepper: {\n        flexGrow: 1,\n        paddingTop: 20,\n        paddingBottom: 24,\n        display: 'flex',\n        flexFlow: 'column wrap',\n        justifyContent: 'space-between',\n        [theme.breakpoints.down('sm')]: {\n            paddingTop: 10,\n            paddingBottom: 12,\n            paddingLeft: 12,\n            paddingRight: 12,\n        },\n    },\n    progress: {\n        height: 10,\n        borderRadius: 20,\n    },\n    buttonSaveCloseRoutine: {\n        float: 'right',\n        marginLeft: 20,\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '2vh',\n        }\n    },\n    boxButtonSaveClose: {\n        paddingBottom: 24,\n\n        [theme.breakpoints.down('sm')]: {\n            paddingRight: 16,\n        },\n        [theme.breakpoints.down('sm')]: {\n            paddingRight: 12,\n            paddingBottom: 12,\n        },\n        [theme.breakpoints.up('sm')]: {\n            paddingRight: 24,\n        },\n    }\n}));\n\nconst INITIAL_RECAP_TEXT = 'Write your notes of today here.';\n\nclass RoutineDialog extends Component {\n    constructor() {\n        super();\n        this.state = {\n            activeStep: 0,\n            randomGiphyCatURL: '',\n            randomGiphySleepURL: '',\n            recapText: INITIAL_RECAP_TEXT,\n            tasksToBeSaved: [],\n        }\n    }\n\n    render() {\n\n        const { openBackdrop, handleCloseBackDrop, randomGiphyCatURL, randomGiphySleepURL, fetchRandomGiphy, showRoutineSavedMsg, goals, onSaveRoutine, classes, theme, darkMode, } = this.props;\n\n        const maxSteps = 5;\n\n        const onChangeTask = (changedTasks) => {\n            this.setState({ tasksToBeSaved: changedTasks });\n        }\n        const onChangeRecapText = (recapText) => {\n            this.setState({ recapText: recapText });\n        }\n\n\n        const handleNext = () => {\n            this.setState((prevState) => ({\n                activeStep: prevState.activeStep + 1\n            }));\n        };\n        const disableNext = () => {\n            return (this.state.activeStep === maxSteps - 1)\n                || (this.state.activeStep === 1 && (this.state.recapText === INITIAL_RECAP_TEXT || this.state.recapText === ''))\n                || (this.state.activeStep === 2 && goals.length === 0)\n                || (this.state.activeStep === 3 && this.state.tasksToBeSaved.length < 3)\n        }\n        const handleBack = () => {\n            this.setState((prevState) => ({\n                activeStep: prevState.activeStep - 1\n            }));\n        };\n\n        const handleClose = () => {\n            //show unsavedmessage before closing\n            handleCloseBackDrop();\n            const timer = setTimeout(() => {\n                this.setState({ activeStep: 0, tasksToBeSaved: [], recapText: INITIAL_RECAP_TEXT });\n                clearTimeout(timer);\n            }, 500);\n        };\n\n\n        const handleSaveRoutine = () => {\n            onSaveRoutine({\n                recap: this.state.recapText,\n                tasks: this.state.tasksToBeSaved,\n                goals: goals,\n                createdAt: new Date().toString()\n            });\n            handleCloseBackDrop();\n\n            const timer = setTimeout(() => {\n                showRoutineSavedMsg();\n                clearTimeout(timer);\n            }, 1000);\n        };\n\n        return (\n            <Backdrop className={classes.backdropRoutine} open={openBackdrop}>\n                <Container className={classes.containerRoutine}>\n                    <Paper className={classes.paperRoutine} elevation={3}>\n                        <Container className={classes.containerStepper}>\n                            <StepContent activeStep={this.state.activeStep} recapText={this.state.recapText} onChangeRecapText={onChangeRecapText} tasks={this.state.tasksToBeSaved} onChangeTask={onChangeTask} randomGiphyCatURL={randomGiphyCatURL} randomGiphySleepURL={randomGiphySleepURL} shuffleGiphy={fetchRandomGiphy}></StepContent>\n                            <MobileStepper\n                                steps={maxSteps}\n                                position=\"static\"\n                                variant=\"progress\"\n                                activeStep={this.state.activeStep}\n                                classes={{ progress: classes.progress }}    //to get the inner \"progress\" class of the MobileStepper \n                                nextButton={\n                                    <Button style={{ fontSize: isWidthUp('sm', this.props.width) ? \"1rem\" : \"0.8rem\" }} size=\"large\" onClick={handleNext} disabled={disableNext()} >\n                                        Next\n                                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                                    </Button>\n                                }\n                                backButton={\n                                    <Button style={{ fontSize: isWidthUp('sm', this.props.width) ? \"1rem\" : \"0.8rem\" }} size=\"large\" onClick={handleBack} disabled={this.state.activeStep === 0}>\n                                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                                    Back\n                            </Button>\n                                }\n                            />\n                        </Container>\n                        <Box className={classes.boxButtonSaveClose}>\n                            <Button\n                                variant=\"outlined\"\n                                color={darkMode ? \"secondary\" : \"primary\"}\n                                size=\"large\"\n                                className={classes.buttonSaveCloseRoutine}\n                                onClick={handleSaveRoutine}\n                                disabled={!(this.state.activeStep === maxSteps - 1)}\n                            >Save</Button>\n                            <Button\n                                variant=\"outlined\"\n                                color={darkMode ? \"secondary\" : \"primary\"}\n                                size=\"large\"\n                                className={classes.buttonSaveCloseRoutine}\n                                onClick={handleClose}\n                            >Cancel</Button>\n                        </Box>\n\n                    </Paper>\n                </Container>\n            </Backdrop>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(withStyles(styles)(withWidth()(RoutineDialog))));\n","import React, { Component, } from 'react';\nimport { connect } from 'react-redux';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport RoutineDialog from './RoutineDialog';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { setTaskDone } from '../../../actions/actions';\n\nconst isoDateRegex = /^\\d{4}-(0[1-9]|1[0-2])-([12]\\d|0[1-9]|3[01])([T\\s](([01]\\d|2[0-3]):[0-5]\\d|24:00)(:[0-5]\\d([.,]\\d+)?)?([zZ]|([+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?$/;\n\nfunction isObjectEmpty(obj) {\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst mapStateToProps = state => {\n    return {\n        darkMode: state.changeDarkMode.darkMode,\n        goals: state.changeGoals.goals,\n        routineToShow: state.changeRoutines.routineToShow,                    // -''-\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSetTaskDone: (routineIndex, taskIndex, done) => dispatch(setTaskDone(routineIndex, taskIndex, done)),\n    }\n}\n\nconst styles = (theme => ({\n    //toolbar: theme.mixins.toolbar,\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        flexDirection: 'column',\n        [theme.breakpoints.down('md')]: {\n            height: '80vh',\n            paddingLeft: 0,\n            paddingRight: 0,\n        },\n        [theme.breakpoints.up('md')]: {\n            height: 'calc(100vh - (112px))',\n        }\n    },\n    button: {\n    },\n\n    boxButton: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 30,\n        marginBottom: 30,\n    },\n    centerTypo: {\n        textAlign: 'center',\n    },\n    boxTasks: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    checkBoxTask: {\n        minWidth: 30,\n    },\n    typoTaskTimePrim: {\n        margin: 'auto 20px auto 0px',\n        paddingRight: 20,\n        fontSize: '1.5rem',\n        borderRight: '3px #496AEA solid',\n    },\n    typoTaskTimeSec: {\n        margin: 'auto 20px auto 0px',\n        paddingRight: 20,\n        fontSize: '1.5rem',\n        borderRight: '3px #FBA435 solid',\n    },\n    boxRecap: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    recapTextField: {\n        marginTop: 20,\n    }\n\n}));\n\n\nclass TodayPage extends Component {\n    constructor() {\n        super();\n        this.fetchRandomGiphy('cat');\n        this.fetchRandomGiphy('sleep');\n        this.state = {\n            openBackdrop: false,\n            routineSavedMsgOpen: false,\n            randomGiphyCatURL: '',\n            randomGiphySleepURL: '',\n        }\n    }\n\n    fetchRandomGiphy = (tag) => {\n        fetch('https://api.giphy.com/v1/gifs/random?api_key=mcJc4PG0eNZeswDk8cJEpWbDY3e8FBOI&tag=' + tag + '&rating=PG')\n            .then(response => response.json())\n            .then(response => {\n                tag === 'cat' && this.setState({ randomGiphyCatURL: response.data.image_original_url })\n                tag === 'sleep' && this.setState({ randomGiphySleepURL: response.data.image_original_url })\n            }\n            );\n    }\n\n    render() {\n        const { routineToShow, onSetTaskDone, classes, darkMode } = this.props;\n\n        const handleOpenBackDrop = () => {\n            this.setState({ openBackdrop: true });\n        };\n        const handleCloseBackDrop = () => {\n            this.setState({ openBackdrop: false });\n        };\n        const showRoutineSavedMsg = () => {\n            this.setState({ routineSavedMsgOpen: true });\n        }\n        const closeRoutineSavedMsg = () => {\n            this.setState({ routineSavedMsgOpen: false });\n        }\n        const compareTasks = (a, b) => {\n            return (a.done === b.done) ? Date.parse(a.plannedtime) - Date.parse(b.plannedtime)\n                : (a.done && !b.done) ? 1\n                    : (!a.done && b.done) && -1\n        }\n\n        const handleTaskDone = (event, taskId, taskDone) => {\n            console.log(event.target.checked);\n            onSetTaskDone(routineToShow.id, taskId, !taskDone)\n        }\n\n        const getPlannedTimeRenderValue = (plannedtime) => {\n            if (plannedtime instanceof Date) {\n                return plannedtime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n            } else if (isoDateRegex.exec(plannedtime)) {\n                return new Date(plannedtime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n            } else {\n                return plannedtime;\n            }\n        }\n\n        const getYourTasksLabel = (LabelType) => {\n            var midnight = new Date(new Date().toDateString());\n            var tonight = new Date(new Date().toDateString());\n            tonight.setDate(midnight.getDate() + 1);\n            var returnValue = \"today\";\n            returnValue =\n                (LabelType === \"Tasks\") ? ((Date.parse(tonight) > Date.parse(routineToShow.createdAt)) ? \"tomorrow\" : \"today\") :\n                    (LabelType === \"Recap\") ? ((Date.parse(tonight) > Date.parse(routineToShow.createdAt)) ? \"today\" : \"yesterday\") :\n                        \"today\"\n            return returnValue;\n        }\n\n        return (\n            <Container className={classes.container} >\n                <RoutineDialog openBackdrop={this.state.openBackdrop} handleCloseBackDrop={handleCloseBackDrop} randomGiphyCatURL={this.state.randomGiphyCatURL} randomGiphySleepURL={this.state.randomGiphySleepURL} fetchRandomGiphy={this.fetchRandomGiphy} showRoutineSavedMsg={showRoutineSavedMsg} />\n\n                <Box className={classes.boxTasks} >\n                    <Box>\n                        <Typography className={classes.centerTypo} variant={isWidthUp('sm', this.props.width) ? \"h4\" : \"h5\"}>\n                            {routineToShow.tasks ?\n                                (\n                                    \"Your tasks for \" + getYourTasksLabel(\"Tasks\")\n                                )\n                                :\n                                \"Your tasks\"\n                            }\n\n                        </Typography>\n                    </Box>\n                    {\n                        routineToShow.tasks ?\n                            <List>\n                                {routineToShow.tasks.sort((a, b) => compareTasks(a, b)).map(task =>\n                                    <ListItem key={task.tableData.id} disabled={task.done}>\n\n                                        <ListItemAvatar>\n                                            <Typography className={darkMode ? classes.typoTaskTimeSec : classes.typoTaskTimePrim} paragraph>\n                                                {getPlannedTimeRenderValue(task.plannedtime)}\n                                            </Typography>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={task.title}\n                                            secondary={task.description}\n                                        />\n                                        <ListItemIcon className={classes.checkBoxTask}>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={task.done}\n                                                onChange={e => handleTaskDone(e, task.tableData.id, task.done)}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                color={darkMode ? \"secondary\" : \"primary\"}\n                                            />\n                                        </ListItemIcon>\n                                    </ListItem>\n\n                                )}\n                            </List>\n                            :\n                            <Typography className={classes.centerTypo} paragraph>\n                                No important tasks scheduled.\n                        </Typography>\n                    }\n                </Box>\n\n                <Box className={classes.boxRecap} >\n                    <Box>\n                        <Typography className={classes.centerTypo} variant={isWidthUp('sm', this.props.width) ? \"h4\" : \"h5\"}>\n                            {routineToShow.tasks ?\n                                (\n                                    \"Your recap of \" + getYourTasksLabel(\"Recap\")\n                                )\n                                :\n                                \"Your recap\"\n                            }\n                        </Typography>\n                    </Box>\n                    {\n                        routineToShow.recap ?\n                            <TextField\n                                className={classes.recapTextField}\n                                multiline\n                                value={routineToShow.recap}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                variant=\"outlined\"\n                            />\n                            :\n                            <Typography className={classes.centerTypo} paragraph>\n                                No recap found.\n                            </Typography>\n                    }\n                </Box>\n                <Box className={classes.boxButton}>\n                    <Button\n                        variant=\"contained\"\n                        color={darkMode ? \"secondary\" : \"primary\"}\n                        size=\"large\"\n                        className={classes.button}\n                        disabled={!isObjectEmpty(routineToShow)}\n                        onClick={handleOpenBackDrop}\n                        startIcon={<PlayCircleOutlineIcon />}\n                    >\n                        Start Routine\n                    </Button>\n                </Box>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                    autoHideDuration={6000}\n                    open={this.state.routineSavedMsgOpen}\n                    onClose={closeRoutineSavedMsg}\n                >\n                    <Alert severity=\"success\">\n                        Evening routine has been saved!\n                    </Alert>\n                </Snackbar>\n            </Container>);\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(withStyles(styles)(withWidth()(TodayPage))));\n"],"sourceRoot":""}