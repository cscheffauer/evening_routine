{"version":3,"sources":["components/Pages/GoalsPage/GoalCard.js","components/Pages/GoalsPage/AddGoal.js","components/Pages/GoalsPage/EditGoal.js","components/Pages/GoalsPage/GoalsPage.js"],"names":["getGoalCategoryImage","category","GOAL_CATEGORIES","GOAL_CAT_CAREER","GOAL_CAT_EDUCATIONAL","GOAL_CAT_EXTERNAL","GOAL_CAT_EXPERIMENTAL","GOAL_CAT_FINANCIAL","GOAL_CAT_HEALTH","GOAL_CAT_PERSONAL","GOAL_CAT_PSYCHOLOGICAL","GOAL_CAT_RELATIONSHIP","GOAL_CAT_SPIRITUAL","GoalCard","props","goal","index","openEditGoalDialog","handleRemove","darkMode","classes","makeStyles","theme","root","height","width","breakpoints","down","up","media","palette","secondary","main","primary","cardActionArea","boxDeleteButton","position","top","deleteButton","float","padding","minWidth","cardContent","useStyles","Card","className","CardActionArea","CardMedia","onClick","image","title","CardContent","Typography","gutterBottom","variant","component","color","description","Box","Button","size","categories","Object","values","AddGoal","state","newGoal","handleChangeCategory","bind","handleChangeTitle","handleChangeDescription","event","newState","assign","this","target","value","setState","initialGoal","handleAdd","handleClose","open","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","select","label","fullWidth","onChange","margin","helperText","map","MenuItem","key","required","autoFocus","type","placeholder","multiline","DialogActions","disabled","e","Component","EditGoalDialog","goalToBeEdited","handleEdit","withStyles","flexGrow","container","display","flexDirection","justifyContent","maxWidth","boxGoals","marginTop","boxNoGoals","imgNoGoals","typoNoGoals","textAlign","buttonAdd","marginBottom","minHeight","centerTypo","withWidth","goals","onAddGoal","onEditGoal","onRemoveGoal","options","initialNewGoal","React","useState","openAdd","setOpenAdd","openEdit","setOpenEdit","setNewGoal","setGoalToBeEdited","indexOfGoal","setIndexOfGoal","Container","hideTitle","undefined","isWidthUp","length","Grid","item","xs","justify","spacing","paragraph","noGoalsMessage","alt","src","Fab","aria-label","goalToBeAdded","preventDefault","EditGoal"],"mappings":"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","file":"static/js/11.65dc7302.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Box from '@material-ui/core/Box';\n\nimport { GOAL_CATEGORIES } from '../../../constants';\n\nconst getGoalCategoryImage = (category) => {\n    switch (category) {\n        case GOAL_CATEGORIES.GOAL_CAT_CAREER:\n            return \"/images/goals/categories/career.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_EDUCATIONAL:\n            return \"/images/goals/categories/educational.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_EXTERNAL:\n            return \"/images/goals/categories/external.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_EXPERIMENTAL:\n            return \"/images/goals/categories/experimental.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_FINANCIAL:\n            return \"/images/goals/categories/financial.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_HEALTH:\n            return \"/images/goals/categories/health.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_PERSONAL:\n            return \"/images/goals/categories/personal_development.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_PSYCHOLOGICAL:\n            return \"/images/goals/categories/psychological.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_RELATIONSHIP:\n            return \"/images/goals/categories/relationship.png\"\n        case GOAL_CATEGORIES.GOAL_CAT_SPIRITUAL:\n            return \"/images/goals/categories/spiritual.png\"\n        default:\n            break;\n    }\n}\n\n\nconst useStyles = (darkMode) => makeStyles(theme => ({\n    root: {\n        height: '100%',\n        width: 250,\n        [theme.breakpoints.down('sm')]: {\n            width: '65vw',\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 350,\n        },\n    },\n    media: {\n        height: 200,\n        [theme.breakpoints.down('sm')]: {\n            height: 150,\n        },\n        backgroundColor: darkMode ? theme.palette.secondary.main : theme.palette.primary.main,\n        marginTop: 40,\n    },\n    cardActionArea: {\n        height: '100%'\n    },\n    boxDeleteButton: {\n        height: 40,\n        width: '100%',\n        position: 'absolute',\n        top: 0,\n    },\n    deleteButton: {\n        float: 'right',\n        padding: '8px 5px',\n        minWidth: 45,\n    },\n    cardContent: {\n        height: 'inherit'\n    }\n\n}));\n\nconst GoalCard = (props) => {\n    const { goal, index, openEditGoalDialog, handleRemove, darkMode } = props;\n    const classes = useStyles(darkMode)();\n    return (\n        <Card className={classes.root}>\n            <CardActionArea className={classes.cardActionArea} >\n                <CardMedia\n                    onClick={() => openEditGoalDialog(goal, index)}\n                    className={classes.media}\n                    image={getGoalCategoryImage(goal.category)}\n                    title={goal.category}\n                />\n                <CardContent className={classes.cardContent} onClick={() => openEditGoalDialog(goal, index)}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {goal.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {goal.description}\n                    </Typography>\n                </CardContent>\n                <Box className={classes.boxDeleteButton}>\n                    <Button className={classes.deleteButton} size=\"small\" color={darkMode ? \"secondary\" : \"primary\"} onClick={() => handleRemove(index)}>\n                        <HighlightOffIcon />\n                    </Button>\n                </Box>\n            </CardActionArea>\n\n        </Card>\n    );\n}\n\nexport default GoalCard;","import React, { Component, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport {\n    GOAL_CATEGORIES\n} from '../../../constants'       //get constants form constants file\n\n\nconst categories = Object.values(GOAL_CATEGORIES);\n\n\nclass AddGoal extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            newGoal: {},\n        }\n        this.handleChangeCategory = this.handleChangeCategory.bind(this);\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    }\n\n    handleChangeCategory(event) {\n        let newState = Object.assign({}, this.state);\n        newState.newGoal.category = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeTitle(event) {\n        let newState = Object.assign({}, this.state);\n        newState.newGoal.title = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeDescription(event) {\n        let newState = Object.assign({}, this.state);\n        newState.newGoal.description = event.target.value;\n        this.setState(newState);\n    }\n\n    componentDidUpdate() {\n        this.state.newGoal !== this.props.initialGoal && this.setState({ newGoal: this.props.initialGoal })\n    }\n\n    render() {\n        const { handleAdd, handleClose, open } = this.props;\n\n        return (\n            <Fragment>\n\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n\n                    <DialogTitle id=\"form-dialog-title\">Add a new goal</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            select\n                            id=\"category\"\n                            label=\"Category\"\n                            fullWidth\n                            onChange={this.handleChangeCategory}\n                            margin=\"normal\"\n                            value={this.state.newGoal.category}\n                            helperText=\"Please select the goal category\"\n                        >\n                            {categories.map(category => (\n                                <MenuItem key={category} value={category}>\n                                    {category}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <TextField\n                            required\n                            autoFocus\n                            margin=\"normal\"\n                            id=\"title\"\n                            label=\"Title\"\n                            type=\"text\"\n                            fullWidth\n                            onChange={this.handleChangeTitle}\n                        />\n                        <TextField\n                            required\n                            autoFocus\n                            margin=\"normal\"\n                            id=\"description\"\n                            label=\"Description\"\n                            placeholder=\"Type in a proper description of your goal.\"\n                            multiline\n                            type=\"text\"\n                            fullWidth\n                            onChange={this.handleChangeDescription}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button disabled={!(this.state.newGoal.title !== '' && this.state.newGoal.description !== '')} onClick={(e) => handleAdd(e, this.state.newGoal)} color=\"primary\">\n                            Add\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nexport default AddGoal;","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n    GOAL_CATEGORIES\n} from '../../../constants'       //get constants form constants file\n\nconst categories = Object.values(GOAL_CATEGORIES);\n\nconst styles = theme => ({});\n\n\nclass EditGoalDialog extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            goalToBeEdited: {},\n        }\n        this.handleChangeCategory = this.handleChangeCategory.bind(this);\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    }\n\n    handleChangeCategory(event) {\n        let newState = Object.assign({}, this.state);\n        newState.goalToBeEdited.category = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeTitle(event) {\n        let newState = Object.assign({}, this.state);\n        newState.goalToBeEdited.title = event.target.value;\n        this.setState(newState);\n    }\n    handleChangeDescription(event) {\n        let newState = Object.assign({}, this.state);\n        newState.goalToBeEdited.description = event.target.value;\n        this.setState(newState);\n    }\n\n    componentDidUpdate() {\n        if (this.props.initialGoal !== this.state.goalToBeEdited) {\n            this.setState({ goalToBeEdited: this.props.initialGoal });\n        }\n    }\n    render() {\n        const { index, handleEdit, handleClose, open } = this.props;\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n\n                <DialogTitle id=\"form-dialog-title\">Edit existing goal</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        select\n                        id=\"category\"\n                        label=\"Category\"\n                        fullWidth\n                        onChange={this.handleChangeCategory}\n                        margin=\"normal\"\n                        value={this.state.goalToBeEdited.category}\n                        helperText=\"Please select the goal category\"\n                    >\n                        {categories.map(category => (\n                            <MenuItem key={category} value={category}>\n                                {category}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <TextField\n                        required\n                        autoFocus\n                        margin=\"normal\"\n                        id=\"title\"\n                        label=\"Title\"\n                        type=\"text\"\n                        fullWidth\n                        value={this.state.goalToBeEdited.title}\n                        onChange={this.handleChangeTitle}\n                    />\n                    <TextField\n                        required\n                        autoFocus\n                        margin=\"normal\"\n                        id=\"description\"\n                        label=\"Description\"\n                        placeholder=\"Type in a proper description of your goal.\"\n                        multiline\n                        type=\"text\"\n                        fullWidth\n                        value={this.state.goalToBeEdited.description}\n                        onChange={this.handleChangeDescription}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                        </Button>\n                    <Button disabled={!(this.state.goalToBeEdited.title !== '' && this.state.goalToBeEdited.description !== '')} onClick={(e) => handleEdit(e, this.state.goalToBeEdited, index)} color=\"primary\">\n                        Save\n                        </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(styles)(EditGoalDialog);","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport GoalCard from './GoalCard';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport AddGoal from './AddGoal';\nimport EditGoal from './EditGoal';\n\nimport {\n    GOAL_CATEGORIES\n} from '../../../constants'       //get constants form constants file\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        [theme.breakpoints.up('md')]: {\n            maxWidth: 1280,\n            height: 'calc(100vh - (112px))',\n        },\n    },\n    boxGoals: {\n        height: '100%',\n        marginTop: 20,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    boxNoGoals: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    imgNoGoals: {\n        width: '55vh',\n        [theme.breakpoints.down('sm')]: {\n            width: '35vh',\n        },\n        margin: '0 auto',\n    },\n    typoNoGoals: {\n        textAlign: 'center',\n        marginTop: 60,\n        [theme.breakpoints.down('sm')]: {\n            marginTop: 30,\n        }\n    },\n    buttonAdd: {\n        display: 'flex',\n        margin: 'auto',\n        marginTop: 30,\n        marginBottom: 30,\n        minHeight: 56,\n    },\n    centerTypo: {\n        textAlign: 'center',\n    }\n}));\n\n\nconst GoalsPage = (props) => {\n    const { goals, onAddGoal, onEditGoal, onRemoveGoal, options, darkMode } = props;\n    const classes = useStyles();\n\n    const initialNewGoal = {\n        title: '',\n        description: '',\n        category: GOAL_CATEGORIES.GOAL_CAT_EDUCATIONAL,\n    }\n\n    const [openAdd, setOpenAdd] = React.useState(false);\n    const [openEdit, setOpenEdit] = React.useState(false);\n    const [newGoal, setNewGoal] = React.useState({});\n    const [goalToBeEdited, setGoalToBeEdited] = React.useState({});\n    const [indexOfGoal, setIndexOfGoal] = React.useState(0);\n\n    const openAddGoalDialog = () => {\n        setNewGoal(Object.assign({}, initialNewGoal));\n        setOpenAdd(true);\n    };\n\n    const openEditGoalDialog = (goal, index) => {\n        setGoalToBeEdited(Object.assign({}, goal));\n        setIndexOfGoal(index);\n        setOpenEdit(true);\n    }\n\n    const handleAdd = (event, goalToBeAdded) => {\n        event.preventDefault();\n        onAddGoal(Object.assign({}, goalToBeAdded));\n        handleClose();\n    }\n\n    const handleEdit = (event, goalToBeEdited, index) => {\n        event.preventDefault();\n        onEditGoal(Object.assign({}, goalToBeEdited), index);\n        handleClose();\n    };\n\n    const handleRemove = (index) => {\n        onRemoveGoal(index);\n    }\n\n    const handleClose = () => {\n        setOpenAdd(false);\n        setOpenEdit(false);\n    };\n    return (\n        <Container className={!options.hideTitle ? classes.container : undefined}>\n            {!options.hideTitle &&\n                <Box>\n                    <Typography className={classes.centerTypo} variant={isWidthUp('sm', props.width) ? \"h4\" : \"h6\"}>\n                        Your personal goals\n                        </Typography>\n                </Box>\n            }\n            <Box className={classes.boxGoals} >\n                {goals.length > 0 ?\n                    <Grid className={classes.root} item xs={12}>\n                        <Grid container justify=\"center\" spacing={3}>\n                            {goals.map((goal, index) => (\n                                <Grid key={index} item>\n                                    <GoalCard goal={goal} index={index} openEditGoalDialog={openEditGoalDialog} handleRemove={handleRemove} darkMode={darkMode} />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Grid>\n                    :\n                    !options.hideTitle ?\n                        <Box className={classes.boxNoGoals}>\n                            <img alt=\"noGoalsImage\" className={classes.imgNoGoals} src={`/images/goals/` + (darkMode ? `noGoals_dark` : `noGoals`) + `.png`} />\n                            <Typography className={classes.typoNoGoals} paragraph>\n                                {options.noGoalsMessage}\n                            </Typography>\n                        </Box>\n                        :\n                        <Typography className={classes.typoNoGoals} paragraph>\n                            {options.noGoalsMessage}\n                        </Typography>\n\n\n                }\n            </Box>\n            <Fab className={classes.buttonAdd} onClick={openAddGoalDialog} color={darkMode ? \"secondary\" : \"primary\"} aria-label=\"add\">\n                <AddIcon />\n            </Fab>\n            <AddGoal initialGoal={newGoal} handleAdd={handleAdd} handleClose={handleClose} open={openAdd} darkMode={darkMode} />\n            <EditGoal initialGoal={goalToBeEdited} index={indexOfGoal} handleEdit={handleEdit} handleClose={handleClose} open={openEdit} />\n        </Container>\n    );\n};\n\n\n\nexport default withWidth()(GoalsPage);\n"],"sourceRoot":""}