{"version":3,"sources":["../node_modules/@material-ui/icons/ExpandLess.js","../node_modules/@material-ui/icons/ExpandMore.js","components/Pages/HistoryPage/collapseRoutineContent.js","components/Pages/HistoryPage/HistoryPage.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","isoDateRegex","useStyles","makeStyles","theme","listTasks","width","checkBoxTask","minWidth","typoTaskTimePrim","margin","paddingRight","fontSize","borderRight","typoTaskTimeSec","listItemRecap","flexDirection","marginBottom","subheaderRecap","textFieldRecap","marginTop","CollapseRoutineContent","props","routine","darkMode","classes","Box","tasks","List","className","subheader","ListSubheader","component","id","sort","a","b","done","Date","parse","plannedtime","compareTasks","map","task","ListItem","key","tableData","ListItemAvatar","Typography","paragraph","toLocaleTimeString","hour","minute","exec","ListItemText","primary","title","secondary","description","ListItemIcon","Checkbox","disabled","edge","checked","tabIndex","disableRipple","color","centerTypo","recap","TextField","multiline","InputProps","readOnly","variant","container","display","justifyContent","textAlign","breakpoints","down","height","up","listRoutine","flexWrap","backgroundColor","palette","background","paper","typoRoutineFrontPrim","typoRoutineFrontSec","typoRoutineWeekDay","typoRoutineDate","collapseInnerContent","paddingLeft","connect","state","changeDarkMode","routines","changeRoutines","pagesVisited","changePageVisited","dispatch","onChangePageVisited","ROUTE","visited","setPageVisited","withWidth","historyPageVisited","filter","page","route","HISTORY_ROUTE","React","useState","anyOpen","undefined","open","setOpen","historySnackBarOpen","setHistorySnackBarOpen","useEffect","timer","setTimeout","clearTimeout","Container","createdAt","compareRoutines","button","onClick","e","routineId","find","weekDay","startsWith","split","monthString","month","day","getDaySuffix","getDateRenderValue","isWidthUp","length","Collapse","in","timeout","unmountOnExit","Snackbar","anchorOrigin","vertical","horizontal","message","autoHideDuration","onClose"],"mappings":"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","file":"static/js/10.011aec07.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport TextField from '@material-ui/core/TextField';\n\nconst isoDateRegex = /^\\d{4}-(0[1-9]|1[0-2])-([12]\\d|0[1-9]|3[01])([T\\s](([01]\\d|2[0-3]):[0-5]\\d|24:00)(:[0-5]\\d([.,]\\d+)?)?([zZ]|([+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?$/;\n\n\nconst useStyles = makeStyles(theme => ({\n\n    listTasks: {\n        width: '100%',\n    },\n    checkBoxTask: {\n        minWidth: 30,\n    },\n    typoTaskTimePrim: {\n        margin: 'auto 20px auto 0px',\n        paddingRight: 20,\n        fontSize: '1.5rem',\n        borderRight: '3px #496AEA solid',\n    },\n    typoTaskTimeSec: {\n        margin: 'auto 20px auto 0px',\n        paddingRight: 20,\n        fontSize: '1.5rem',\n        borderRight: '3px #FBA435 solid',\n    },\n    listItemRecap: {\n        flexDirection: 'column',\n        marginBottom: 10,\n    },\n    subheaderRecap: {\n        width: '100%',\n    },\n    textFieldRecap: {\n        marginTop: 10,\n        width: '100%',\n    }\n\n}));\n\nconst CollapseRoutineContent = (props) => {\n    const { routine, darkMode } = props;\n    const classes = useStyles();\n    const compareTasks = (a, b) => {\n        return (a.done === b.done) ? Date.parse(a.plannedtime) - Date.parse(b.plannedtime)\n            : (a.done && !b.done) ? 1\n                : (!a.done && b.done) && -1\n    }\n    const getPlannedTimeRenderValue = (plannedtime) => {\n        if (plannedtime instanceof Date) {\n            return plannedtime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        } else if (isoDateRegex.exec(plannedtime)) {\n            return new Date(plannedtime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n        } else {\n            return plannedtime;\n        }\n    }\n\n    return (\n        <>\n            <Box>\n                {\n                    routine.tasks ?\n                        <List\n                            className={classes.listTasks}\n                            subheader={\n                                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                                    Important tasks for the next day:\n                                </ListSubheader>\n                            }>\n                            {routine.tasks.sort((a, b) => compareTasks(a, b)).map(task =>\n                                <ListItem key={task.tableData.id}>\n\n                                    <ListItemAvatar>\n                                        <Typography className={darkMode ? classes.typoTaskTimeSec : classes.typoTaskTimePrim} paragraph>\n                                            {getPlannedTimeRenderValue(task.plannedtime)}\n                                        </Typography>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={task.title}\n                                        secondary={task.description}\n                                    />\n                                    <ListItemIcon className={classes.checkBoxTask}>\n                                        <Checkbox\n                                            disabled\n                                            edge=\"start\"\n                                            checked={task.done}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            color={darkMode ? \"secondary\" : \"primary\"}\n                                        />\n                                    </ListItemIcon>\n                                </ListItem>\n\n                            )}\n                        </List>\n                        :\n                        <Typography className={classes.centerTypo} paragraph>\n                            No tasks scheduled at this day.\n                        </Typography>\n                }\n            </Box>\n            <Box className={classes.listItemRecap}>\n\n                <ListSubheader className={classes.subheaderRecap}>Recap of that day:</ListSubheader>\n\n                {routine.recap ?\n                    <TextField\n                        className={classes.textFieldRecap}\n                        multiline\n                        value={routine.recap}\n                        InputProps={{\n                            readOnly: true,\n                        }}\n                        variant=\"outlined\"\n                    />\n                    :\n                    <Typography className={classes.centerTypo} paragraph>\n                        No recap done at this day.\n                        </Typography>\n                }\n            </Box>\n        </>\n    )\n}\n\nexport default CollapseRoutineContent;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport CollapseRoutineContent from './collapseRoutineContent';\n\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport { setPageVisited } from '../../../actions/actions'\nimport { HISTORY_ROUTE } from '../../../constants';\n\nconst mapStateToProps = state => {\n    return {\n        darkMode: state.changeDarkMode.darkMode,\n        routines: state.changeRoutines.routines,\n        pagesVisited: state.changePageVisited.pagesVisited                    // -''-\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChangePageVisited: (ROUTE, visited) => dispatch(setPageVisited(ROUTE, visited)),\n    }\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n        [theme.breakpoints.down('md')]: {\n            height: '80vh',\n        },\n        [theme.breakpoints.up('md')]: {\n            height: 'calc(100vh - (112px))',\n        }\n    },\n    listRoutine: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        justifyContent: 'space-between',\n        backgroundColor: theme.palette.background.paper,\n    },\n    typoRoutineFrontPrim: {\n        margin: 'auto 30px auto 0px',\n        paddingRight: 20,\n        borderRight: '3px #496AEA solid',\n        textAlign: 'left',\n        minWidth: 200,\n    },\n    typoRoutineFrontSec: {\n        margin: 'auto 30px auto 0px',\n        paddingRight: 20,\n        borderRight: '3px #FBA435 solid',\n        textAlign: 'left',\n        minWidth: 200,\n    },\n    typoRoutineWeekDay: {\n        fontSize: '1.5rem',\n    },\n    typoRoutineDate: {\n        fontSize: '1rem',\n    },\n    collapseInnerContent: {\n        [theme.breakpoints.up('md')]: {\n            paddingLeft: '5vw'\n        },\n\n    }\n}));\n\nconst HistoryPage = (props) => {\n    const { darkMode, routines, pagesVisited, onChangePageVisited } = props;\n    const historyPageVisited = pagesVisited.filter(page => page.route === HISTORY_ROUTE)[0].visited;\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState({ anyOpen: false, id: undefined });\n    const [historySnackBarOpen, setHistorySnackBarOpen] = React.useState(false);\n\n    const handleExpandRoutine = (routineId) => {\n        (open.id === routineId) ?\n            setOpen({ anyOpen: false, id: undefined })\n            :\n            setOpen({ anyOpen: true, id: routineId });\n    };\n\n    const compareRoutines = (a, b) => {\n        return Date.parse(b.createdAt) - Date.parse(a.createdAt);\n    }\n    const getWeekDayRenderValue = (createdAt) => {\n        var weekDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        return weekDays.find(weekDay => weekDay.startsWith(createdAt.split(' ')[0]));\n    }\n\n    const getDaySuffix = (day) => {\n        switch (day) {\n            case \"1\":\n                return \"st\";\n            case \"2\":\n                return \"nd\";\n            case \"3\":\n                return \"rd\";\n            case \"21\":\n                return \"st\";\n            case \"22\":\n                return \"nd\";\n            case \"23\":\n                return \"rd\";\n            case \"31\":\n                return \"st\";\n            default:\n                return \"th\";\n        }\n    }\n\n    const getDateRenderValue = (createdAt) => {\n        var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const monthString = months.find(month => month.startsWith(createdAt.split(' ')[1]));\n        const day = createdAt.split(' ')[2];\n        const dayString = day + getDaySuffix(day);\n        const yearString = createdAt.split(' ')[3];\n        const dateString = dayString + \" \" + monthString + \", \" + yearString;\n        return dateString;\n    }\n\n    useEffect(() => {\n        if (!historyPageVisited) {\n            const timer = setTimeout(() => {\n                setHistorySnackBarOpen(true);\n                onChangePageVisited(HISTORY_ROUTE, true);\n            }, 2000);\n            return () => clearTimeout(timer);\n        }\n    }, [historyPageVisited])\n\n    return (\n        <Container>\n            <List>\n                {routines.sort((a, b) => compareRoutines(a, b)).map(routine =>\n                    <Box key={routine.id} >\n                        <ListItem className={classes.listRoutine} button onClick={(e) => handleExpandRoutine(routine.id)} >\n                            <ListItemAvatar className={darkMode ? classes.typoRoutineFrontSec : classes.typoRoutineFrontPrim}>\n                                <>\n                                    <Typography className={classes.typoRoutineWeekDay}>\n                                        {getWeekDayRenderValue(routine.createdAt)}\n                                    </Typography>\n                                    <Typography className={classes.typoRoutineDate}>\n                                        {getDateRenderValue(routine.createdAt)}\n                                    </Typography>\n                                </>\n                            </ListItemAvatar>\n                            {isWidthUp('sm', props.width) ?\n                                <ListItemText\n                                    primary={routine.tasks.filter(task => (task.done === true)).length + \" of \" + routine.tasks.length + \" tasks completed\"}\n                                />\n                                :\n                                <></>\n                            }\n                            {open ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                        <Collapse className={classes.collapseInnerContent} in={open.anyOpen && (open.id === routine.id)} timeout=\"auto\" unmountOnExit>\n                            <CollapseRoutineContent routine={routine} darkMode={darkMode} />\n                        </Collapse>\n                    </Box>\n                )}\n            </List>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                key={`right,bottom`}\n                open={historySnackBarOpen}\n                message={`Be aware that this is just dummy data. An option to sign up and save your evening routines will be implemented soon!`}\n                autoHideDuration={12000}\n                onClose={() => setHistorySnackBarOpen(false)}\n            />\n\n        </Container>);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(HistoryPage));\n"],"sourceRoot":""}